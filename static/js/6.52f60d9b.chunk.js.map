{"version":3,"sources":["components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/ProductsBlock/styles.ts","components/ContentBlock/ProductsBlock/index.tsx","common/Button/styles.ts","common/Button/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/index.tsx"],"names":["LeftContentSection","styled","Content","ContentWrapper","ServiceWrapper","ContentTitle","MinTitle","MinPara","withTranslation","icon","title","content","section","t","id","direction","justify","align","lg","md","sm","xs","SvgIcon","src","width","height","map","item","span","MainContainer","ImageContainer","TextDetails","TabPane","Tabs","tabData","sort","a","b","style","textAlign","type","defaultActiveKey","onChange","key","console","log","tabPosition","tabname","details","images","tab","autoplay","arrows","dotPosition","image","indexImage","Image","link","objectFit","StyledButton","p","color","Button","fixedWidth","children","onClick","RightBlockContainer","ButtonWrapper","button","document","getElementById","scrollIntoView","behavior","scrollTo","ContentBlock","props","RightContentBlock"],"mappings":"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","file":"static/js/6.52f60d9b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const LeftContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n  height: 100vh;\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  justify-content: space-between;\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const ContentTitle = styled(\"h6\")`\r\n  text-align: center;\r\n`;\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 16px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 14px;\r\n  padding: 0 6px;\r\n  text-align: justify;\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  LeftContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  ContentTitle,\r\n} from \"./styles\";\r\n\r\nconst LeftContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  return (\r\n    <LeftContentSection id={id}>\r\n      <Fade direction=\"left\">\r\n        <Row justify=\"space-between\" align=\"middle\">\r\n          <Col lg={8} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n          <Col lg={14} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <ContentTitle>{t(title)}</ContentTitle>\r\n              <Content>{t(content)}</Content>\r\n              <ServiceWrapper>\r\n                <Row justify=\"end\">\r\n                  {typeof section === \"object\" &&\r\n                    section.map((item: any, id: number) => {\r\n                      return (\r\n                        <Col key={id} span={8}>\r\n                          <MinTitle>\r\n                            <SvgIcon\r\n                              src={item.icon}\r\n                              width=\"30px\"\r\n                              height=\"30px\"\r\n                            />\r\n                            {t(item.title)}\r\n                          </MinTitle>\r\n                          <MinPara>{t(item.content)}</MinPara>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </ServiceWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </LeftContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(LeftContentBlock);\r\n","import styled from \"styled-components\";\n\nexport const MainContainer = styled(\"section\")`\n  position: relative;\n  padding: 10rem 0 8rem;\n  height: 90vh;\n  margin-top: 8rem;\n  @media only screen and (max-width: 1024px) {\n    padding: 8rem 0 6rem;\n    height: 100vh;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 4rem 0 3rem;\n    display: flex;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const ImageContainer = styled(\"div\")`\n  height: 50vh;\n  // border: 1px solid red;\n  @media only screen and (max-width: 1024px) {\n  }\n\n  @media only screen and (max-width: 768px) {\n  }\n`;\nexport const TextDetails = styled(\"div\")`\n  text-align: justify;\n  font-size: 16px;\n  padding: 0px 16px;\n  margin-top: 8px;\n  white-space: pre-wrap;\n`;\n","import { Row, Col, Tabs, Carousel } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { SvgIcon } from \"../../../common/SvgIcon\";\nimport { ContentBlockProps } from \"../types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { MainContainer, ImageContainer, TextDetails } from \"./styles\";\nimport { ImageView } from \"../../../common/Image\";\nconst { TabPane } = Tabs;\n\nconst ProductsBlock = ({ icon, content, t, id }: any) => {\n  const { tabData = [] } = content;\n  tabData.sort((a: any, b: any) => b.id - a.id);\n\n  function callback(key: String): void {\n    console.log(key);\n  }\n  return (\n    <MainContainer id={id}>\n      <Fade direction=\"right\">\n        <h6 style={{ textAlign: \"center\" }}>{t(\"productMe\")}</h6>\n\n        <Tabs\n          type={\"card\"}\n          defaultActiveKey=\"13\"\n          onChange={callback}\n          tabPosition={\"top\"}\n          style={{ height: \"60vh\" }}\n        >\n          {tabData.map((item: any) => {\n            const { id, tabname, details, images } = item;\n            return (\n              <TabPane tab={t(tabname)} key={id}>\n                <Row>\n                  <Col xs={16}>\n                    <Carousel autoplay arrows dotPosition={\"bottom\"}>\n                      {images.map((image: any, indexImage: number) => {\n                        return (\n                          <ImageContainer key={indexImage}>\n                            <ImageView\n                              src={image.link}\n                              width={\"100%\"}\n                              height={\"100%\"}\n                              style={{\n                                objectFit: \"contain\",\n                              }}\n                            />\n                          </ImageContainer>\n                        );\n                      })}\n                    </Carousel>\n                  </Col>\n                  <Col xs={8}>\n                    <TextDetails>{t(details)}</TextDetails>\n                  </Col>\n                </Row>\n              </TabPane>\n            );\n          })}\n        </Tabs>\n      </Fade>\n    </MainContainer>\n  );\n};\n\nexport default withTranslation()(ProductsBlock);\n","import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<any>`\r\n    background: ${(p) => p.color || \"#2e186a\"};\r\n    color: ${(p) => \"#fff\"};\r\n    font-size: 1rem;\r\n    font-weight: 700;\r\n    width: 100%;\r\n    border: 1px solid #edf3f5;\r\n    border-radius: 4px;\r\n    padding: 13px 0;\r\n    cursor: pointer;\r\n    margin-top: 0.625rem;\r\n    max-width: 180px;\r\n    transition: all 0.3s ease-in-out;\r\n    box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n    &:hover,\r\n    &:active,\r\n    &:focus {\r\n        color: #fff;\r\n        border: 1px solid rgb(255, 130, 92);\r\n        background-color: rgb(255, 130, 92);\r\n    }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({\r\n  color,\r\n  fixedWidth,\r\n  children,\r\n  onClick,\r\n}: ButtonProps) => (\r\n  <StyledButton color={color} fixedWidth={fixedWidth} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const RightBlockContainer = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n  height: 100vh;\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n  text-align: justify;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: center;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    // max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    // margin-end: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { Button } from \"../../../common/Button\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  RightBlockContainer,\r\n  Content,\r\n  ContentWrapper,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst RightBlock = ({\r\n  title,\r\n  content,\r\n  button,\r\n  icon,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  return (\r\n    <RightBlockContainer id={id}>\r\n      <Fade direction=\"right\">\r\n        <Row justify=\"space-between\" align=\"middle\">\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6 style={{ textAlign: \"center\" }}>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <ButtonWrapper>\r\n                {typeof button === \"object\" &&\r\n                  button.map((item: any, id: number) => {\r\n                    return (\r\n                      <Button\r\n                        key={id}\r\n                        color={item.color}\r\n                        fixedWidth={true}\r\n                        onClick={() => scrollTo(\"experience\")}\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n              </ButtonWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </RightBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(RightBlock);\r\n","import LeftContentBlock from \"./LeftContentBlock\";\r\nimport ProductsBlock from \"./ProductsBlock\";\r\nimport RightContentBlock from \"./RightContentBlock\";\r\nimport { ContentBlockProps } from \"./types\";\r\n\r\nconst ContentBlock = (props: ContentBlockProps) => {\r\n    if (props.type === \"left\") return <LeftContentBlock {...props} />;\r\n    if (props.type === \"right\") return <RightContentBlock {...props} />;\r\n    if (props.type === \"products\") return <ProductsBlock {...props} />;\r\n    return null;\r\n};\r\n\r\nexport default ContentBlock;\r\n"],"sourceRoot":""}